// File: /internal/db/db.go

package db

import (
	"database/sql"
	"fmt"
	"log"
	"os"
)

// Database representa uma interface gen√©rica para bancos de dados
type Database interface {
	Init() (*sql.DB, error)
}

// GetDatabase retorna a implementa√ß√£o do banco com base na configura√ß√£o
func GetDatabase() (*sql.DB, error) {
	dbType := os.Getenv("DB_DRIVER") // üî• Definir no .env: postgres, mysql, sqlite

	switch dbType {
	case "postgres":
		return InitPostgresDB()
	case "mysql":
		return nil, fmt.Errorf("banco de dados mysql n√£o implementado")
	default:
		log.Fatalf("‚ùå Banco de dados '%s' n√£o suportado!", dbType)
		return nil, fmt.Errorf("banco de dados n√£o suportado: %s", dbType)
	}
}
